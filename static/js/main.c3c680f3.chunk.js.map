{"version":3,"sources":["components/SortPopup/SortPopup.module.scss","components/PokemonCard/PokemonCard.module.scss","components/Pagination/Pagination.module.scss","components/QuickView/QuickView.module.scss","pages/SinglePokemon/SinglePokemon.module.scss","components/FormControl/FormControl.module.scss","pages/Home/Home.module.scss","pages/Auth/Auth.module.scss","pages/NotFound/NotFound.module.scss","App.module.scss","components/Message/Message.module.scss","components/Header/Header.module.scss","components/PokemonCard/pokemon-not-found.jpg","components/PokemonCard/littleMore.svg","components/SortPopup/arrow.svg","components/SortPopup/notFound.png","pages/Auth/arrow.svg","pages/NotFound/pikachu.gif","context/AuthContext.js","context/PagesContext.js","components/FormControl/FormControl.jsx","components/Message/Message.jsx","components/Header/Header.jsx","components/PokemonCard/PokemonCard.jsx","components/Pagination/Pagination.jsx","hooks/scroll.hook.js","components/SortPopup/SortPopup.jsx","components/Loader/Loader.jsx","components/QuickView/QuickView.jsx","pages/Auth/Auth.jsx","hooks/form.hook.js","hooks/http.hook.js","pages/Home/Home.jsx","pages/SinglePokemon/SinglePokemon.jsx","pages/NotFound/NotFound.jsx","App.js","hooks/pages.hook.js","hooks/auth.hook.js","routes.js","index.js"],"names":["module","exports","plug","AuthContext","React","createContext","auth","token","login","logout","PagesContext","pages","getTotalPage","pressPage","setSubtype","setTypes","setCurrentPageToStart","removeFilters","FormControl","placeholder","id","name","type","label","value","disabled","onChange","onBlur","isTouched","isInvalid","className","classNames","classes","Disabled","Invalid","htmlFor","FormControl__Error","Message","message","background","color","styles","style","Header","exact","path","to","onClick","PokemonCard","imageUrl","pokemonNotFound","artist","loading","index","Loading","Wrapper","PokemonCard__Img","PokemonCard__Title","PokemonCard__Disc","backgroundImage","PokemonCard__LittleMore","littleMore","Pagination","useState","document","documentElement","clientWidth","morePagination","setMorePagination","followResizeHandler","console","log","useEffect","window","addEventListener","removeEventListener","paginationItem","pageValue","disc","page","totalPages","Pagination__Plug","Pagination__CurrentPage","useScroll","scrollTop","scrollTo","top","behavior","SortPopup","list","onClickSortPopup","activeSortPopupItem","resetFilter","selectedFilter","visible","setVisible","sortPopupRef","useRef","searchValue","setSearchValue","notFound","setNotFound","searchedList","setSearchedList","body","handleOutsideClick","visibleToggle","searchValueDelete","prev","e","composedPath","includes","current","SortPopupWrap","SortPopup__Label","ref","Visible","arrow","SortPopup__ResetFilter","SortPopup__Search","target","trim","posts","filter","item","toLowerCase","length","SortPopup__List","sort","map","key","Active","SortPopup__NotFound","src","notFoundImg","alt","Loader","defaultInfo","QuickView","pokemon","closeQuickView","Fragment","SinglePokemon","SinglePokemonInfo","SinglePokemon__Img","types","join","subtype","attacks","damage","cost","resistances","evolvesFrom","SinglePokemon__Desc","text","Auth","history","useHistory","useContext","responseData","setResponseData","submitted","isError","email","password","confirmation","isConfirmation","form","setForm","validateField","fieldName","setIsInvalidInput","test","String","checkForRequired","formControl","changeHandler","persist","touchInputHandler","authHandler","preventDefault","push","user","returnSecureToken","then","res","status","catch","error","useForm","title","confirmationControl","loginControls","FormWrapper","useHttp","request","useCallback","url","a","fetch","Home","homeRef","asideOffsetTopRef","pokemons","setPokemons","cards","subtypes","pagination","setLoading","fixedBar","setFixedBar","setPokemon","typeArr","setTypeArr","subtypeArr","setSubtypeArr","response","json","data","offsetTop","asidePositionHandler","canUse","URLSearchParams","append","pageSize","headers","responseTotalPages","Math","ceil","get","pageYOffset","subsidiaryFilterFuncs","quickViewHandler","overflow","FixedBar","Aside","PokemonList","Array","fill","_","match","params","card","NotFound","pikachu","NotFound__Info","App","location","search","setPages","pageNumber","usePages","localStorage","getItem","setToken","expIn","Date","getTime","expDate","expiresIn","idToken","setItem","clear","Axios","post","useAuth","isAuth","routes","component","useRoutes","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3c680f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SortPopupWrap\":\"SortPopup_SortPopupWrap__3NMOh\",\"SortPopup__Label\":\"SortPopup_SortPopup__Label__289OS\",\"Visible\":\"SortPopup_Visible__3bpRj\",\"SortPopup__ResetFilter\":\"SortPopup_SortPopup__ResetFilter__EOgoK\",\"SortPopup\":\"SortPopup_SortPopup__1byHp\",\"open\":\"SortPopup_open__2fFLn\",\"SortPopup__Search\":\"SortPopup_SortPopup__Search__22qyk\",\"SortPopup__List\":\"SortPopup_SortPopup__List__3KAG6\",\"Active\":\"SortPopup_Active__2NEBC\",\"SortPopup__NotFound\":\"SortPopup_SortPopup__NotFound__kWbW7\",\"Loading\":\"SortPopup_Loading__DvvxS\",\"move\":\"SortPopup_move__QDUov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonCard\":\"PokemonCard_PokemonCard__1s4yf\",\"PokemonCard__Img\":\"PokemonCard_PokemonCard__Img__1H1z2\",\"PokemonCard__Title\":\"PokemonCard_PokemonCard__Title__tAp1F\",\"PokemonCard__Disc\":\"PokemonCard_PokemonCard__Disc__2xPlr\",\"PokemonCard__LittleMore\":\"PokemonCard_PokemonCard__LittleMore__k6sTH\",\"Loading\":\"PokemonCard_Loading__3wbmy\",\"Wrapper\":\"PokemonCard_Wrapper__3omC7\",\"move\":\"PokemonCard_move__1WsVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__1yDKj\",\"Pagination__Plug\":\"Pagination_Pagination__Plug__3NtYr\",\"Pagination__CurrentPage\":\"Pagination_Pagination__CurrentPage__16rIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuickView\":\"QuickView_QuickView__2MCbO\",\"SinglePokemon\":\"QuickView_SinglePokemon__JcMOw\",\"SinglePokemonInfo\":\"QuickView_SinglePokemonInfo__wFGvc\",\"SinglePokemon__Img\":\"QuickView_SinglePokemon__Img__1hg_M\",\"SinglePokemon__Desc\":\"QuickView_SinglePokemon__Desc__3OLNs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SinglePokemon\":\"SinglePokemon_SinglePokemon__eg10p\",\"SinglePokemonInfo\":\"SinglePokemon_SinglePokemonInfo__292Hz\",\"SinglePokemon__Img\":\"SinglePokemon_SinglePokemon__Img__2fwfZ\",\"SinglePokemon__Desc\":\"SinglePokemon_SinglePokemon__Desc__2tuY0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"FormControl_FormControl__eLwUK\",\"Invalid\":\"FormControl_Invalid__2KmPv\",\"Disabled\":\"FormControl_Disabled__afXch\",\"FormControl__Error\":\"FormControl_FormControl__Error__3eXXc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"Home_Home__3dgv3\",\"Aside\":\"Home_Aside__nKSFh\",\"PokemonList\":\"Home_PokemonList__1pQIH\",\"QuickView\":\"Home_QuickView__1Dpls\",\"SinglePokemon\":\"Home_SinglePokemon__2KKJX\",\"SinglePokemonInfo\":\"Home_SinglePokemonInfo__2kRXZ\",\"SinglePokemon__Img\":\"Home_SinglePokemon__Img__3myTE\",\"SinglePokemon__Desc\":\"Home_SinglePokemon__Desc__1LReW\",\"FixedBar\":\"Home_FixedBar__2XjWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3KSdX\",\"FormWrapper\":\"Auth_FormWrapper__1pPxB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotFound\":\"NotFound_NotFound__11nQW\",\"NotFound__Info\":\"NotFound_NotFound__Info__1zBtj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3IkS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__3AhHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3n5oN\"};","module.exports = __webpack_public_path__ + \"static/media/pokemon-not-found.d51f9f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/littleMore.244f107c.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.8454dfc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/notFound.d47e8d79.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow.2090aecc.svg\";","module.exports = __webpack_public_path__ + \"static/media/pikachu.8bc686b1.gif\";","import React from 'react';\r\n\r\nfunction plug() {}\r\n\r\nexport const AuthContext = React.createContext({\r\n    auth: plug, \r\n    token: null, \r\n    login: plug, \r\n    logout: plug \r\n})","import React from \"react\";\r\n\r\nfunction plug() {}\r\n\r\nexport const PagesContext = React.createContext({\r\n    pages: {},\r\n    getTotalPage: plug,\r\n    pressPage: plug,\r\n    setSubtype: plug,\r\n    setTypes: plug,\r\n    setCurrentPageToStart: plug,\r\n    removeFilters: plug,\r\n});\r\n","import React from \"react\";\r\nimport classes from \"./FormControl.module.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nconst FormControl = ({\r\n    placeholder = \"Placeholder\",\r\n    id,\r\n    name,\r\n    type = \"text\",\r\n    label = \"Label\",\r\n    value = \"\",\r\n    disabled = false,\r\n    onChange,\r\n    onBlur,\r\n    isTouched,\r\n    isInvalid,\r\n}) => {\r\n    return (\r\n        <div className={classNames(classes.FormControl, disabled && classes.Disabled, !!isInvalid && isTouched && classes.Invalid)}>\r\n            <label htmlFor={id}>{label}</label>\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                onBlur={onBlur}\r\n            />\r\n            {!!isInvalid && isTouched && <span className={classes.FormControl__Error}>{isInvalid}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormControl;\r\n","import React from 'react';\r\nimport classes from './Message.module.scss';\r\n\r\nconst Message = ({message, background = '', color = ''}) => {\r\n    const styles = {\r\n        background: background,\r\n        color: color\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Message} style={styles}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nconst Header = ({ logout, removeFilters }) => {\r\n    const logoutHandler = () => {\r\n        removeFilters();\r\n        logout();\r\n    };\r\n\r\n    return (\r\n        <div className={classNames(classes.Header, \"container\")}>\r\n            <Route exact path=\"/pokemon/:id\">\r\n                <Link to=\"/\">&lt; Back</Link>\r\n            </Route>\r\n            <button type=\"button\" onClick={logoutHandler}>\r\n                Logout\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport classes from \"./PokemonCard.module.scss\";\r\nimport pokemonNotFound from \"./pokemon-not-found.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport littleMore from \"./littleMore.svg\";\r\n\r\nconst PokemonCard = ({\r\n    imageUrl = pokemonNotFound,\r\n    name = \"Pokemon name\",\r\n    artist = \"artist\",\r\n    id,\r\n    loading,\r\n    index,\r\n    onClick,\r\n}) => {\r\n    const onClickHandler = () => {\r\n        onClick(index);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <li className={classNames(classes.PokemonCard, loading && classes.Loading)}>\r\n                <div className={classes.Wrapper}>\r\n                    <div className={classes.PokemonCard__Img}></div>\r\n                    <h2 className={classes.PokemonCard__Title}>{name}</h2>\r\n                    <p className={classes.PokemonCard__Disc}>{artist}</p>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <li className={classNames(classes.PokemonCard)}>\r\n            <Link to={`/pokemon/${id}`}>\r\n                <div\r\n                    className={classes.PokemonCard__Img}\r\n                    style={{ backgroundImage: `url(${imageUrl})` }}\r\n                ></div>\r\n                <h2 className={classes.PokemonCard__Title}>{name}</h2>\r\n                <p className={classes.PokemonCard__Disc}>{artist}</p>\r\n            </Link>\r\n            <button\r\n                className={classes.PokemonCard__LittleMore}\r\n                style={{ backgroundImage: `url(${littleMore})` }}\r\n                onClick={onClickHandler}\r\n            ></button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\r\nimport classes from \"./Pagination.module.scss\";\r\n\r\nconst Pagination = ({ pages, pressPage, className }) => {\r\n    const [morePagination, setMorePagination] = React.useState(document.documentElement.clientWidth > 660);\r\n\r\n    const followResizeHandler = () => {\r\n        console.log(1);\r\n        if (document.documentElement.clientWidth > 900) {\r\n            setMorePagination(true);\r\n        } else {\r\n            setMorePagination(false);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('resize', followResizeHandler);\r\n        \r\n        return () => {\r\n            window.removeEventListener('resize', followResizeHandler);\r\n        }\r\n    }, []);\r\n\r\n    const paginationItem = (pageValue, disc) => {\r\n        const pressPaginationItem = () => {\r\n            pressPage(pageValue);\r\n        };\r\n\r\n        return (\r\n            <span className={className} onClick={pressPaginationItem}>\r\n                {disc ? disc : pageValue}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    // сделал так, а не так \"const { page, totalPages } = pages;\",\r\n    // потому что при старте страницы с параметрами поиска в url\r\n    // адресе данная конструкция в pagination хуке парсит строку\r\n    // и на выходе все \"value\" - это строки, и по этому я решил сделать\r\n    // тут такой простенький \"костылёк\", если это можно так назвать\r\n    // new URLSearchParams(location.search).forEach(function (value, key) {\r\n    //     setPages((prev) => {\r\n    //         return {\r\n    //             ...prev,\r\n    //             [key]: value,\r\n    //             canUse: true,\r\n    //         }\r\n    //     })\r\n    // });\r\n\r\n    const page = +pages.page;\r\n    const totalPages = +pages.totalPages;\r\n\r\n    if (!morePagination) {\r\n        return (\r\n            <div className={classes.Pagination}>\r\n                {page - 1 > 0 && paginationItem(page - 1, \"<\")}\r\n                {page - 2 > 0 && paginationItem(1)}\r\n                {page - 2 > 1 && <span className={classes.Pagination__Plug}>...</span>}\r\n                {page - 1 > 0 && paginationItem(page - 1)}\r\n                <span className={classes.Pagination__CurrentPage}>{page}</span>\r\n                {page + 1 < totalPages && paginationItem(page + 1)}\r\n                {page + 2 < totalPages && (\r\n                    <span className={classes.Pagination__Plug}>...</span>\r\n                )}\r\n                {page < totalPages && paginationItem(totalPages)}\r\n                {page < totalPages && paginationItem(page + 1, \">\")}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Pagination}>\r\n            {page - 1 > 0 && paginationItem(page - 1, \"< Prev\")}\r\n            {page - 3 > 0 && paginationItem(1)}\r\n            {page - 3 > 1 && <span className={classes.Pagination__Plug}>...</span>}\r\n            {page - 2 > 0 && paginationItem(page - 2)}\r\n            {page - 1 > 0 && paginationItem(page - 1)}\r\n            <span className={classes.Pagination__CurrentPage}>{page}</span>\r\n            {page + 1 < totalPages && paginationItem(page + 1)}\r\n            {page + 2 < totalPages && paginationItem(page + 2)}\r\n            {page + 3 < totalPages && (\r\n                <span className={classes.Pagination__Plug}>...</span>\r\n            )}\r\n            {page < totalPages && paginationItem(totalPages)}\r\n            {page < totalPages && paginationItem(page + 1, \"Next >\")}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","export const useScroll = () => {\r\n    const scrollTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\",\r\n        });\r\n    }\r\n\r\n    return {scrollTop}\r\n}","import React from \"react\";\r\nimport classes from \"./SortPopup.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport arrow from \"./arrow.svg\";\r\nimport notFoundImg from \"./notFound.png\";\r\nimport { useScroll } from \"../../hooks/scroll.hook\";\r\n\r\nconst SortPopup = ({\r\n    label = \"label\",\r\n    list,\r\n    onClickSortPopup,\r\n    activeSortPopupItem,\r\n    resetFilter,\r\n    selectedFilter,\r\n    loading,\r\n}) => {\r\n    const { scrollTop } = useScroll();\r\n    const [visible, setVisible] = React.useState(false);\r\n    const sortPopupRef = React.useRef();\r\n    const [searchValue, setSearchValue] = React.useState(\"\");\r\n    const [notFound, setNotFound] = React.useState(false);\r\n    const [searchedList, setSearchedList] = React.useState([...list]);\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener(\"click\", handleOutsideClick);\r\n\r\n        return () => {\r\n            document.body.removeEventListener(\"click\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const visibleToggle = () => {\r\n        searchValueDelete();\r\n        setVisible((prev) => {\r\n            return !prev;\r\n        });\r\n    };\r\n\r\n    const handleOutsideClick = (e) => {\r\n        const path = e.path || (e.composedPath && e.composedPath());\r\n\r\n        if (!path.includes(sortPopupRef.current)) {\r\n            setVisible(false);\r\n            searchValueDelete();\r\n        }\r\n    };\r\n\r\n    const sortPopupHandler = (value) => {\r\n        visibleToggle();\r\n        onClickSortPopup(value);\r\n    };\r\n\r\n    const onChangeSearchHandler = (e) => {\r\n        if (!e.target.value.trim(\"\")) {\r\n            searchValueDelete();\r\n\r\n            return;\r\n        }\r\n\r\n        let posts = [\r\n            ...list.filter((item) => {\r\n                return item.toLowerCase().includes(e.target.value.toLowerCase());\r\n            }),\r\n        ];\r\n\r\n        setNotFound(posts.length > 0 ? false : true);\r\n        setSearchValue(e.target.value);\r\n        setSearchedList(posts);\r\n    };\r\n\r\n    const searchValueDelete = () => {\r\n        setSearchValue(\"\");\r\n        setNotFound(false);\r\n        setSearchedList(list);\r\n    };\r\n\r\n    const resetFilterHandler = () => {\r\n        scrollTop();\r\n        resetFilter(null);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classNames(classes.SortPopupWrap, loading ? classes.Loading : null)}>\r\n                <div className={classNames(classes.SortPopup__Label)}>\r\n                    <span></span>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div ref={sortPopupRef} className={classes.SortPopupWrap}>\r\n            <div\r\n                className={classNames(\r\n                    classes.SortPopup__Label,\r\n                    visible ? classes.Visible : null\r\n                )}\r\n                onClick={visibleToggle}\r\n            >\r\n                <span>{activeSortPopupItem ? activeSortPopupItem : label}</span>\r\n                <div style={{ backgroundImage: `url(${arrow})` }}></div>\r\n            </div>\r\n            {selectedFilter && !visible && (\r\n                <button\r\n                    onClick={resetFilterHandler}\r\n                    className={classes.SortPopup__ResetFilter}\r\n                >\r\n                    Reset filter\r\n                </button>\r\n            )}\r\n            {visible && (\r\n                <div className={classes.SortPopup}>\r\n                    <div className={classes.SortPopup__Search}>\r\n                        <input\r\n                            value={searchValue}\r\n                            type=\"text\"\r\n                            placeholder=\"Type something...\"\r\n                            onChange={onChangeSearchHandler}\r\n                        />\r\n                    </div>\r\n                    <ul className={classes.SortPopup__List}>\r\n                        {searchedList.sort().map((item, index) => {\r\n                            return (\r\n                                <li\r\n                                    key={`${item}_${index}`}\r\n                                    className={\r\n                                        item === activeSortPopupItem\r\n                                            ? classes.Active\r\n                                            : null\r\n                                    }\r\n                                    onClick={() => sortPopupHandler(item)}\r\n                                >\r\n                                    {item}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    {notFound && (\r\n                        <div className={classes.SortPopup__NotFound}>\r\n                            <p>{label} not found...</p>\r\n                            <img src={notFoundImg} alt=\"not found\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortPopup;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport classes from \"./QuickView.module.scss\";\r\nimport classNames from \"classnames\";\r\nconst defaultInfo = \"Unfortunately this information is not available\";\r\n\r\nconst QuickView = ({ pokemon, closeQuickView }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {pokemon && (\r\n                <div className={classes.QuickView}>\r\n                    <button\r\n                        onClick={closeQuickView}\r\n                    >\r\n                        <div></div>\r\n                        <div></div>\r\n                    </button>\r\n                    <div className={classNames(classes.SinglePokemon, \"container\")}>\r\n                        <div className={classes.SinglePokemonInfo}>\r\n                            <div className={classes.SinglePokemon__Img}>\r\n                                <img\r\n                                    src={pokemon.imageUrl && pokemon.imageUrl}\r\n                                    alt={pokemon.name && pokemon.name}\r\n                                />\r\n                            </div>\r\n                            <ul>\r\n                                <li>\r\n                                    <span>Pokemon name: </span>\r\n                                    <span>\r\n                                        {pokemon.name ? pokemon.name : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Type: </span>\r\n                                    <span>\r\n                                        {pokemon.types\r\n                                            ? pokemon.types.join(\", \")\r\n                                            : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Subtype: </span>\r\n                                    <span>\r\n                                        {pokemon.subtype ? pokemon.subtype : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                                <hr />\r\n                                <li>\r\n                                    <span>Attack Damage: </span>\r\n                                    <span>\r\n                                        {pokemon.attacks\r\n                                            ? pokemon.attacks\r\n                                                  .map((item) => item.damage)\r\n                                                  .join(\", \")\r\n                                            : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Attack Cost: </span>\r\n                                    <span>\r\n                                        {pokemon.attacks\r\n                                            ? pokemon.attacks\r\n                                                  .map((item) => item.cost.join(\"+\"))\r\n                                                  .join(\", \")\r\n                                            : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Resistances: </span>\r\n                                    <span>\r\n                                        {pokemon.resistances\r\n                                            ? pokemon.resistances\r\n                                                  .map(\r\n                                                      (item) =>\r\n                                                          `${item.type} ${item.value}`\r\n                                                  )\r\n                                                  .join(\", \")\r\n                                            : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                                <li>\r\n                                    <span>Evolves From: </span>\r\n                                    <span>\r\n                                        {pokemon.evolvesFrom\r\n                                            ? pokemon.evolvesFrom\r\n                                            : defaultInfo}\r\n                                    </span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <p className={classes.SinglePokemon__Desc}>\r\n                            {pokemon.attacks\r\n                                ? pokemon.attacks.map((item) => item.text).join(\" \")\r\n                                : defaultInfo}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default QuickView;\r\n","import React from \"react\";\r\nimport classes from \"./Auth.module.scss\";\r\nimport { FormControl, Loader, Message } from \"../../components\";\r\nimport arrow from \"./arrow.svg\";\r\nimport { useForm } from \"../../hooks/form.hook\";\r\n\r\nconst Auth = () => {\r\n    const { form, changeHandler, touchInputHandler, authHandler } = useForm();\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Pokemon | Auth\";\r\n    }, []);\r\n\r\n    const confirmationControl = (\r\n        <FormControl\r\n            label=\"Code from SMS\"\r\n            id=\"confirmation\"\r\n            name=\"confirmation\"\r\n            type=\"text\"\r\n            placeholder=\"Type the verification code from SMS...\"\r\n            value={form.confirmation.value}\r\n            disabled={form.submitted}\r\n            onChange={changeHandler}\r\n            onBlur={touchInputHandler}\r\n            isTouched={form.confirmation.isTouched}\r\n            isInvalid={form.confirmation.isInvalid}\r\n        />\r\n    );\r\n\r\n    const loginControls = (\r\n        <React.Fragment>\r\n            <FormControl\r\n                label=\"E-mail\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                placeholder=\"Type E-mail...\"\r\n                value={form.email.value}\r\n                disabled={form.submitted}\r\n                onChange={changeHandler}\r\n                onBlur={touchInputHandler}\r\n                isTouched={form.email.isTouched}\r\n                isInvalid={form.email.isInvalid}\r\n            />\r\n            <FormControl\r\n                label=\"Password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Type password...\"\r\n                value={form.password.value}\r\n                disabled={form.submitted}\r\n                onChange={changeHandler}\r\n                onBlur={touchInputHandler}\r\n                isTouched={form.password.isTouched}\r\n                isInvalid={form.password.isInvalid}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.Auth}>\r\n            <div className={classes.FormWrapper}>\r\n                <form>\r\n                    {form.confirmation.isConfirmation\r\n                        ? confirmationControl\r\n                        : loginControls}\r\n                    {!!form.isError && (\r\n                        <Message\r\n                            background=\"tomato\"\r\n                            color=\"white\"\r\n                            message={form.isError}\r\n                        />\r\n                    )}\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={form.submitted}\r\n                        style={{ backgroundImage: `url(${!form.submitted && arrow})` }}\r\n                        onClick={authHandler}\r\n                    >\r\n                        {form.submitted && <Loader />}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst smsCode = \"123456\";\r\n\r\nexport const useForm = () => {\r\n    const history = useHistory();\r\n    const { auth, login } = React.useContext(AuthContext);\r\n    const [responseData, setResponseData] = React.useState(null);\r\n    const [form, setForm] = React.useState({\r\n        submitted: false,\r\n        isError: \"\",\r\n        email: {\r\n            isTouched: false,\r\n            isInvalid: \"\",\r\n            value: \"\",\r\n        },\r\n        password: {\r\n            isTouched: false,\r\n            isInvalid: \"\",\r\n            value: \"\",\r\n        },\r\n        confirmation: {\r\n            isConfirmation: false,\r\n            isTouched: false,\r\n            isInvalid: \"\",\r\n            value: \"\",\r\n        },\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        e.persist();\r\n\r\n        setForm((prev) => {\r\n            return {\r\n                ...prev,\r\n                isError: \"\",\r\n                [e.target.name]: {\r\n                    ...prev[e.target.name],\r\n                    value: e.target.value,\r\n                },\r\n            };\r\n        });\r\n\r\n        validateField(e.target.name, e.target.value);\r\n    };\r\n\r\n    const touchInputHandler = (e) => {\r\n        e.persist();\r\n\r\n        setForm((prev) => {\r\n            return {\r\n                ...prev,\r\n                [e.target.name]: {\r\n                    ...prev[e.target.name],\r\n                    isTouched: true,\r\n                },\r\n            };\r\n        });\r\n\r\n        validateField(e.target.name, e.target.value);\r\n    };\r\n\r\n    const validateField = (fieldName, value) => {\r\n        let isInvalid;\r\n\r\n        const setIsInvalidInput = () => {\r\n            setForm((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    [fieldName]: {\r\n                        ...prev[fieldName],\r\n                        isInvalid: isInvalid,\r\n                    },\r\n                };\r\n            });\r\n        };\r\n\r\n        if (!value.trim(\"\")) {\r\n            isInvalid = \"This field is required...\";\r\n\r\n            setIsInvalidInput();\r\n\r\n            return;\r\n        }\r\n\r\n        switch (fieldName) {\r\n            case \"email\":\r\n                isInvalid = !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n                    String(value).toLowerCase()\r\n                )\r\n                    ? \"Type correct E-mail...\"\r\n                    : \"\";\r\n\r\n                break;\r\n            case \"password\":\r\n                isInvalid =\r\n                    // вообще при авторизации не следует валидировать на длинну,\r\n                    // т.к. потенциальные взломщики буду знать, что пароль длиннее\r\n                    // конкретного значения, но для примера пусть будет\r\n                    value.length < 6 ? \"Password must be at least 6 characters...\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        setIsInvalidInput();\r\n    };\r\n\r\n    const checkForRequired = (formControl, value) => {\r\n        setForm((prev) => {\r\n            return {\r\n                ...prev,\r\n                [formControl]: {\r\n                    ...prev[formControl],\r\n                    isTouched: true,\r\n                    isInvalid: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const authHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (form.confirmation.isConfirmation) {\r\n            if (!form.confirmation.value.trim(\"\")) {\r\n                checkForRequired('confirmation', 'This field is required...');\r\n                console.log(3);\r\n\r\n                return;\r\n            }\r\n        } else {\r\n            if (!form.email.value.trim(\"\")) {\r\n                checkForRequired('email', 'This field is required...');\r\n\r\n                console.log(1);\r\n\r\n                return;\r\n            } else if (!form.password.value.trim(\"\")) {\r\n                checkForRequired('password', 'This field is required...');\r\n                console.log(2);\r\n                \r\n                return;\r\n            }\r\n        }\r\n\r\n        setForm((prev) => {\r\n            return {\r\n                ...prev,\r\n                submitted: true,\r\n                isError: \"\",\r\n                email: {\r\n                    ...prev.email,\r\n                    isInvalid: \"\",\r\n                    isTouched: false,\r\n                },\r\n                password: {\r\n                    ...prev.password,\r\n                    isInvalid: \"\",\r\n                    isTouched: false,\r\n                },\r\n                confirmation: {\r\n                    ...prev.confirmation,\r\n                    isInvalid: \"\",\r\n                    isTouched: false,\r\n                },\r\n            };\r\n        });\r\n\r\n        if (form.confirmation.isConfirmation) {\r\n            if (smsCode === form.confirmation.value) {\r\n                setForm((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        submitted: false,\r\n                    };\r\n                });\r\n                login(responseData);\r\n                history.push(\"/\");\r\n            } else {\r\n                setForm((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        submitted: false,\r\n                        isError: \"You typed incorrect verification code...\",\r\n                    };\r\n                });\r\n            }\r\n        } else {\r\n            const user = {\r\n                email: form.email.value,\r\n                password: form.password.value,\r\n                returnSecureToken: true,\r\n            };\r\n\r\n            auth(user)\r\n                .then((res) => {\r\n                    setForm((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            submitted: false,\r\n                        };\r\n                    });\r\n\r\n                    if (res.status === 200) {\r\n                        setResponseData({ ...res });\r\n                        setForm((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                confirmation: {\r\n                                    ...prev.confirmation,\r\n                                    isConfirmation: true,\r\n                                },\r\n                            };\r\n                        });\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                    setForm((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            submitted: false,\r\n                            isError: \"You typed incorrect data...\",\r\n                        };\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    return { form, changeHandler, touchInputHandler, authHandler };\r\n};\r\n","import React from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const request = React.useCallback(\r\n        async (url) => {\r\n            try {\r\n                return await fetch(\r\n                    `https://api.pokemontcg.io/v1/${url}`\r\n                );\r\n            } catch (e) {}\r\n        },\r\n        []\r\n    );\r\n\r\n    return { request };\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Home.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { Pagination, PokemonCard, SortPopup } from \"../../components\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { PagesContext } from \"../../context/PagesContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useScroll } from \"../../hooks/scroll.hook\";\r\nimport QuickView from \"../../components/QuickView/QuickView\";\r\n\r\nconst Home = () => {\r\n    const homeRef = React.useRef();\r\n    const asideOffsetTopRef = React.useRef();\r\n    const history = useHistory();\r\n    const { scrollTop } = useScroll();\r\n    const { request } = useHttp();\r\n    const {\r\n        pages,\r\n        getTotalPage,\r\n        pressPage,\r\n        setSubtype,\r\n        setTypes,\r\n        setCurrentPageToStart,\r\n        removeFilters,\r\n    } = React.useContext(PagesContext);\r\n    const [pokemons, setPokemons] = React.useState([]);\r\n    const [loading, setLoading] = React.useState({\r\n        cards: false,\r\n        types: true,\r\n        subtypes: true,\r\n        pagination: false,\r\n    });\r\n    const [fixedBar, setFixedBar] = React.useState(false);\r\n    const [pokemon, setPokemon] = React.useState(null);\r\n    const [typeArr, setTypeArr] = React.useState([]);\r\n    const [subtypeArr, setSubtypeArr] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Pokemon | Home\";\r\n\r\n        request(`/types`).then(async (response) => {\r\n            const data = await response.json();\r\n\r\n            setTypeArr([...data.types]);\r\n            setLoading((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    types: false,\r\n                };\r\n            });\r\n        });\r\n\r\n        request(`/subtypes`).then(async (response) => {\r\n            const data = await response.json();\r\n\r\n            setSubtypeArr([...data.subtypes]);\r\n            setLoading((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    subtypes: false,\r\n                };\r\n            });\r\n        });\r\n\r\n        asideOffsetTopRef.current = homeRef.current.offsetTop;\r\n\r\n        document.addEventListener(\"scroll\", asidePositionHandler);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"scroll\", asidePositionHandler);\r\n        };\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        if (pages.canUse) {\r\n            let url = new URLSearchParams(\"\");\r\n\r\n            !!pages.page && url.append(\"page\", pages.page);\r\n            !!pages.pageSize && url.append(\"pageSize\", pages.pageSize);\r\n            !!pages.types && url.append(\"types\", pages.types);\r\n            !!pages.subtype && url.append(\"subtype\", pages.subtype);\r\n\r\n            url = `/?${url}`;\r\n\r\n            history.push(url);\r\n        }\r\n\r\n        setLoading((prev) => {\r\n            return {\r\n                ...prev,\r\n                cards: true,\r\n            };\r\n        });\r\n\r\n        request(\r\n            `cards?page=${pages.page}&pageSize=${pages.pageSize}${\r\n                !pages.types ? \"\" : `&types=${pages.types}`\r\n            }${!pages.subtype ? \"\" : `&subtype=${pages.subtype}`}`\r\n        ).then(async (response) => {\r\n            let headers = {};\r\n            const data = await response.json();\r\n\r\n            for (let [key, value] of response.headers) {\r\n                headers = {\r\n                    ...headers,\r\n                    [key]: value,\r\n                };\r\n            }\r\n\r\n            const responseTotalPages = Math.ceil(\r\n                +response.headers.get(\"total-count\") / 10\r\n            );\r\n\r\n            if (pages.totalPages !== responseTotalPages) {\r\n                getTotalPage(responseTotalPages);\r\n            }\r\n\r\n            setPokemons([...data.cards]);\r\n\r\n            setLoading((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    cards: false,\r\n                };\r\n            });\r\n            setLoading((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    pagination: false,\r\n                };\r\n            });\r\n        });\r\n    }, [pages.types, pages.subtype, pages.page]);\r\n\r\n    const asidePositionHandler = () => {\r\n        if (document.documentElement.clientWidth > 820) {\r\n            if (window.pageYOffset + 10 > asideOffsetTopRef.current) {\r\n                setFixedBar(true);\r\n            } else {\r\n                setFixedBar(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const subsidiaryFilterFuncs = () => {\r\n        scrollTop();\r\n        setLoading((prev) => {\r\n            return {\r\n                ...prev,\r\n                pagination: true,\r\n            };\r\n        });\r\n        setCurrentPageToStart();\r\n    };\r\n\r\n    const typeHandler = (value) => {\r\n        subsidiaryFilterFuncs();\r\n        setTypes(value);\r\n    };\r\n\r\n    const subtypeHandler = (value) => {\r\n        subsidiaryFilterFuncs();\r\n        setSubtype(value);\r\n    };\r\n\r\n    const removeFiltersHandler = () => {\r\n        scrollTop();\r\n        removeFilters();\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const quickViewHandler = (index) => {\r\n        setPokemon(pokemon ? null : pokemons[index]);\r\n        document.body.style.overflow = pokemon ? \"\" : \"hidden\";\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                classes.Home,\r\n                \"container\",\r\n                fixedBar ? classes.FixedBar : null\r\n            )}\r\n        >\r\n            <aside ref={homeRef} className={classNames(classes.Aside)}>\r\n                <SortPopup\r\n                    label=\"Type\"\r\n                    list={typeArr}\r\n                    onClickSortPopup={typeHandler}\r\n                    activeSortPopupItem={pages.types}\r\n                    resetFilter={setTypes}\r\n                    selectedFilter={pages.types}\r\n                    loading={loading.types}\r\n                />\r\n                <SortPopup\r\n                    label=\"Subtype\"\r\n                    list={subtypeArr}\r\n                    onClickSortPopup={subtypeHandler}\r\n                    activeSortPopupItem={pages.subtype}\r\n                    resetFilter={setSubtype}\r\n                    selectedFilter={pages.subtype}\r\n                    loading={loading.subtypes}\r\n                />\r\n                <button onClick={removeFiltersHandler} disabled={!pages.canUse}>\r\n                    Reset all filters\r\n                </button>\r\n            </aside>\r\n            <main>\r\n                <ul className={classes.PokemonList}>\r\n                    {loading.cards\r\n                        ? Array(10)\r\n                              .fill(1)\r\n                              .map((_, index) => (\r\n                                  <PokemonCard key={index} loading={loading.cards} />\r\n                              ))\r\n                        : pokemons.map(\r\n                              ({ imageUrl, name, artist, id, types, subtype }, index) => (\r\n                                  <PokemonCard\r\n                                      key={`${name}_${id}`}\r\n                                      imageUrl={imageUrl}\r\n                                      name={name}\r\n                                      artist={artist}\r\n                                      id={id}\r\n                                      types={types}\r\n                                      subtype={subtype}\r\n                                      loading={loading.cards}\r\n                                      index={index}\r\n                                      onClick={quickViewHandler}\r\n                                  />\r\n                              )\r\n                          )}\r\n                </ul>\r\n                {!loading.pagination && pages.totalPages > 1 && (\r\n                    <Pagination pages={pages} pressPage={pressPage} />\r\n                )}\r\n            </main>\r\n            {pokemon && <QuickView pokemon={pokemon} closeQuickView={quickViewHandler} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport classes from \"./SinglePokemon.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { Loader } from \"../../components\";\r\n\r\nconst defaultInfo = \"Unfortunately this information is not available\";\r\n\r\nconst SinglePokemon = ({ match }) => {\r\n    const { request } = useHttp();\r\n    const [pokemon, setPokemon] = React.useState(null);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        setLoading(true);\r\n        request(`/cards/${match.params.id}`).then(async (response) => {\r\n            const data = await response.json();\r\n\r\n            setPokemon({ ...data.card });\r\n            document.title = `Pokemon | ${data.card.name}`;\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className={classNames(classes.SinglePokemon, \"container\")}>\r\n                <Loader />;\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {pokemon && (\r\n                <div className={classNames(classes.SinglePokemon, \"container\")}>\r\n                    <div className={classes.SinglePokemonInfo}>\r\n                        <div className={classes.SinglePokemon__Img}>\r\n                            <img\r\n                                src={pokemon.imageUrl && pokemon.imageUrl}\r\n                                alt={pokemon.name && pokemon.name}\r\n                            />\r\n                        </div>\r\n                        <ul>\r\n                            <li>\r\n                                <span>Pokemon name: </span>\r\n                                <span>{pokemon.name ? pokemon.name : defaultInfo}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span>Type: </span>\r\n                                <span>\r\n                                    {pokemon.types\r\n                                        ? pokemon.types.join(\", \")\r\n                                        : defaultInfo}\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                <span>Subtype: </span>\r\n                                <span>\r\n                                    {pokemon.subtype ? pokemon.subtype : defaultInfo}\r\n                                </span>\r\n                            </li>\r\n                            <hr />\r\n                            <li>\r\n                                <span>Attack Damage: </span>\r\n                                <span>\r\n                                    {pokemon.attacks\r\n                                        ? pokemon.attacks\r\n                                              .map((item) => item.damage)\r\n                                              .join(\", \")\r\n                                        : defaultInfo}\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                <span>Attack Cost: </span>\r\n                                <span>\r\n                                    {pokemon.attacks\r\n                                        ? pokemon.attacks\r\n                                              .map((item) => item.cost.join(\"+\"))\r\n                                              .join(\", \")\r\n                                        : defaultInfo}\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                <span>Resistances: </span>\r\n                                <span>\r\n                                    {pokemon.resistances\r\n                                        ? pokemon.resistances\r\n                                              .map((item) => `${item.type} ${item.value}`)\r\n                                              .join(\", \")\r\n                                        : defaultInfo}\r\n                                </span>\r\n                            </li>\r\n                            <li>\r\n                                <span>Evolves From: </span>\r\n                                <span>\r\n                                    {pokemon.evolvesFrom\r\n                                        ? pokemon.evolvesFrom\r\n                                        : defaultInfo}\r\n                                </span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <p className={classes.SinglePokemon__Desc}>\r\n                        {pokemon.attacks\r\n                            ? pokemon.attacks.map((item) => item.text).join(\" \")\r\n                            : defaultInfo}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SinglePokemon;\r\n","import React from \"react\";\r\nimport classes from \"./NotFound.module.scss\";\r\nimport pikachu from \"./pikachu.gif\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    React.useEffect(() => {\r\n        document.title = \"Pokemon | 404\";\r\n    }, []);\r\n    return (\r\n        <div className={classes.NotFound} style={{ backgroundImage: `url(${pikachu})` }}>\r\n            <div className={classes.NotFound__Info}>\r\n                <h1>404</h1>\r\n                <p>Как Пикачу не старался, он не смог найти данную страницу...</p>\r\n                <Link to=\"/\">Перейти на главную</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport classes from \"./App.module.scss\";\nimport classNames from \"classnames\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { PagesContext } from \"./context/PagesContext\";\nimport { Header } from \"./components\";\nimport { usePages } from \"./hooks/pages.hook\";\nimport { useRoutes } from \"./routes\";\n\nfunction App() {\n    const {\n        pages,\n        getTotalPage,\n        pressPage,\n        setSubtype,\n        setTypes,\n        setCurrentPageToStart,\n        removeFilters,\n    } = usePages({ location: window.location });\n    const { auth, token, login, logout } = useAuth();\n    const isAuth = !!token;\n    const routes = useRoutes(isAuth);\n\n    return (\n        <AuthContext.Provider value={{ auth, isAuth, login, logout }}>\n            <PagesContext.Provider\n                value={{\n                    pages,\n                    getTotalPage,\n                    pressPage,\n                    setSubtype,\n                    setTypes,\n                    setCurrentPageToStart,\n                    removeFilters,\n                }}\n            >\n                <div className={classNames(classes.App)}>\n                    {isAuth && <Header removeFilters={removeFilters} logout={logout} />}\n                    {routes}\n                </div>\n            </PagesContext.Provider>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { useScroll } from \"./scroll.hook\";\r\n\r\nexport const usePages = ({ location }) => {\r\n    const { scrollTop } = useScroll();\r\n    const [pages, setPages] = React.useState({\r\n        page: !!new URLSearchParams(location.search).get(\"page\")\r\n            ? +new URLSearchParams(location.search).get(\"page\")\r\n            : 1,\r\n        totalPages: null,\r\n        pageSize: !!new URLSearchParams(location.search).get(\"pageSize\")\r\n            ? +new URLSearchParams(location.search).get(\"pageSize\")\r\n            : 10,\r\n        types: !!new URLSearchParams(location.search).get(\"types\")\r\n            ? new URLSearchParams(location.search).get(\"types\")\r\n            : null,\r\n        subtype: !!new URLSearchParams(location.search).get(\"subtype\")\r\n            ? new URLSearchParams(location.search).get(\"subtype\")\r\n            : null,\r\n        canUse: !!location.search ? true : false,\r\n    });\r\n\r\n    const getTotalPage = (totalPages) => {\r\n        setPages((prev) => {\r\n            return {\r\n                ...prev,\r\n                totalPages: totalPages,\r\n            };\r\n        });\r\n    };\r\n\r\n    const setCurrentPageToStart = () => {\r\n        setPages((prev) => {\r\n            return {\r\n                ...prev,\r\n                page: 1,\r\n            };\r\n        });\r\n    };\r\n\r\n    const setTypes = (types) => {\r\n        setPages((prev) => {\r\n            return {\r\n                ...prev,\r\n                types: types,\r\n                canUse: true,\r\n            };\r\n        });\r\n    };\r\n\r\n    const setSubtype = (subtype) => {\r\n        setPages((prev) => {\r\n            return {\r\n                ...prev,\r\n                subtype: subtype,\r\n                canUse: true,\r\n            };\r\n        });\r\n    };\r\n\r\n    const pressPage = (pageNumber = 1) => {\r\n        scrollTop();\r\n        setPages((prev) => {\r\n            return {\r\n                ...prev,\r\n                page: pageNumber,\r\n                canUse: true,\r\n            };\r\n        });\r\n    };\r\n\r\n    const removeFilters = () => {\r\n        setPages((prev) => {\r\n            return {\r\n                ...prev,\r\n                page: 1,\r\n                pageSize: 10,\r\n                types: \"\",\r\n                subtype: \"\",\r\n                canUse: false,\r\n                totalPages: null,\r\n            };\r\n        });\r\n    };\r\n\r\n    return {\r\n        pages,\r\n        getTotalPage,\r\n        pressPage,\r\n        setTypes,\r\n        setSubtype,\r\n        setCurrentPageToStart,\r\n        removeFilters,\r\n    };\r\n};\r\n","import Axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = React.useState(localStorage.getItem(\"authToken\") || null);\r\n\r\n    React.useEffect(() => {\r\n        const expIn = +localStorage.getItem(\"tokenLifeSpan\");\r\n        \r\n        if ((new Date()).getTime() > expIn) {\r\n            logout();\r\n        } else {\r\n            setToken(localStorage.getItem(\"authToken\"));\r\n        }\r\n    }, []);\r\n\r\n    const login = React.useCallback((response = null) => {\r\n        if (response) {\r\n            const expDate = (new Date()).getTime() + +response.data.expiresIn * 1000\r\n\r\n            setToken(response.data.idToken);\r\n\r\n            localStorage.setItem(\"authToken\", response.data.idToken);\r\n            localStorage.setItem(\"tokenLifeSpan\", expDate);\r\n        } else {\r\n            localStorage.clear();\r\n        }\r\n    }, []);\r\n\r\n    const logout = React.useCallback(() => {\r\n        login(null);\r\n        setToken(null);\r\n    }, []);\r\n\r\n    const auth = React.useCallback(async (user) => {\r\n        return await Axios.post(\r\n            \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBbWQUFTxafb_R3bFw8Cj5RXsE_fKlSB4E\",\r\n            user\r\n        );\r\n    }, []);\r\n\r\n    return { auth, token, login, logout };\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Auth, Home, NotFound, SinglePokemon } from \"./pages\";\r\n\r\nexport const useRoutes = (isAuth) => {\r\n    if (isAuth) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/pokemon/:id\" component={SinglePokemon} />\r\n                <Route path=\"*\" exact component={NotFound} />\r\n            </Switch>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/auth\" exact component={Auth} />\r\n            <Redirect to=\"/auth\" />\r\n        </Switch>\r\n    );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}